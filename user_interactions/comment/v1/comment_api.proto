syntax = "proto3";

package user_interactions.comment.v1;

import "user_interactions/comment/v1/comment.proto";

message CreateCommentRequest {
    user_interactions.comment.v1.Comment comment = 1;
}

message CreateCommentResponse {
    user_interactions.comment.v1.Comment comment = 1;
}

message GetCommentRequest {
    string id = 1;
}

message GetCommentResponse {
    user_interactions.comment.v1.Comment comment = 1;
}

message DeleteCommentRequest {
    string id = 1;
}

message DeleteCommentResponse {
    user_interactions.comment.v1.Comment comment = 1;
}



message ListCommentsRequest {
    oneof request {
        FilterByUser filter_by_user = 1;
        FilterByEntity filter_by_entity = 2;
    }
    string page_size = 3;
    string page_token = 4;

    // FilterByUser filters comments by user
    message FilterByUser {
        string user_id = 1;
        string tenant = 2;
        string entity_type = 3;
    }

    // FilterByEntity filters comments by entity
    message FilterByEntity {
        string entity_arn = 1; // multi tenant id # tenant:entity_type:entity_id
    }
}

message ListCommentsResponse {
    repeated user_interactions.comment.v1.Comment comments = 1;
    string next_page_token = 2;
}

service CommentService {
    rpc CreateComment(CreateCommentRequest) returns (CreateCommentResponse) {}
    rpc GetComment(GetCommentRequest) returns (GetCommentResponse) {}
    rpc DeleteComment(DeleteCommentRequest) returns (DeleteCommentResponse) {}
    rpc ListComments(ListCommentsRequest) returns (ListCommentsResponse) {}
}

